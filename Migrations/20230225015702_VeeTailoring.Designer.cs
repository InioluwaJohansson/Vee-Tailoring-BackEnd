// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vee_Tailoring.Context;

#nullable disable

namespace Vee_Tailoring.Migrations;

[DbContext(typeof(TailoringContext))]
[Migration("20230225015702_VeeTailoring")]
partial class VeeTailoring
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.10")
            .HasAnnotation("Relational:MaxIdentifierLength", 64);

        modelBuilder.Entity("V_Tailoring.Entities.Address", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Country")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("NumberLine")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("PostalCode")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Region")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("State")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Street")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Addresses");
            });

        modelBuilder.Entity("V_Tailoring.Entities.ArmType", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("ArmLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("ArmTypes");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Category", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("CategoryDescription")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("CategoryName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("Categories");
            });

        modelBuilder.Entity("V_Tailoring.Entities.ClothCategory", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("ClothName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("ClothCategories");
            });

        modelBuilder.Entity("V_Tailoring.Entities.ClothGender", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Gender")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("ClothGender");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Collection", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("ClothCategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClothGenderId")
                    .HasColumnType("int");

                b.Property<string>("CollectionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("CollectionName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("Pieces")
                    .HasColumnType("int");

                b.Property<double>("Price")
                    .HasColumnType("double");

                b.HasKey("Id");

                b.HasIndex("ClothCategoryId");

                b.HasIndex("ClothGenderId");

                b.ToTable("Collections");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Color", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("ColorCode")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ColorName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("Colors");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Comment", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<DateTime>("CommentDate")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Comments")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("CustomerId")
                    .HasColumnType("int");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("Likes")
                    .HasColumnType("int");

                b.Property<int>("PostId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CustomerId");

                b.HasIndex("PostId");

                b.ToTable("Comments");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Complaint", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<bool>("IsSolved")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.HasKey("Id");

                b.ToTable("Complaints");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Customer", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("CustomerNo")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("MeasurementsId")
                    .HasColumnType("int");

                b.Property<int>("UserDetailsId")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("MeasurementsId");

                b.HasIndex("UserDetailsId");

                b.HasIndex("UserId")
                    .IsUnique();

                b.ToTable("Customers");
            });

        modelBuilder.Entity("V_Tailoring.Entities.DefaultPrice", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(65,30)");

                b.Property<string>("PriceName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("DefaultPrices");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Roles");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Users");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.UserRole", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("RoleId")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.HasIndex("UserId");

                b.ToTable("UserRoles");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Material", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("MaterialName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<decimal>("MaterialPrice")
                    .HasColumnType("decimal(65,30)");

                b.Property<string>("MaterialUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Materials");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Measurement", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("AnkleSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ArmLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ArmSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BackWaist")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BodyHeight")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BurstGirth")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("FrontWaist")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Head")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("HighHips")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("HipSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("LegLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("NeckSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ShoulderWidth")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ThirdQuarterLegLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("WaistSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("WristCircumfrence")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Measurements");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Order", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<bool>("AddToCart")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("ArmTypeId")
                    .HasColumnType("int");

                b.Property<int>("ClothCategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClothGenderId")
                    .HasColumnType("int");

                b.Property<int>("ColorId")
                    .HasColumnType("int");

                b.Property<DateTime>("CompletionTime")
                    .HasColumnType("datetime(6)");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("CustomerId")
                    .HasColumnType("int");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsAssigned")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("IsCompleted")
                    .HasColumnType("int");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("IsPaid")
                    .HasColumnType("int");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("MaterialId")
                    .HasColumnType("int");

                b.Property<int>("OrderAddressId")
                    .HasColumnType("int");

                b.Property<string>("OrderId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("OrderMeasurementId")
                    .HasColumnType("int");

                b.Property<int>("OrderPerson")
                    .HasColumnType("int");

                b.Property<int>("PatternId")
                    .HasColumnType("int");

                b.Property<decimal>("Pieces")
                    .HasColumnType("decimal(65,30)");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(65,30)");

                b.Property<int>("StaffId")
                    .HasColumnType("int");

                b.Property<int>("StyleId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ArmTypeId");

                b.HasIndex("ClothCategoryId");

                b.HasIndex("ClothGenderId");

                b.HasIndex("ColorId");

                b.HasIndex("CustomerId");

                b.HasIndex("MaterialId");

                b.HasIndex("OrderAddressId");

                b.HasIndex("OrderMeasurementId");

                b.HasIndex("PatternId");

                b.HasIndex("StaffId");

                b.HasIndex("StyleId");

                b.ToTable("Orders");
            });

        modelBuilder.Entity("V_Tailoring.Entities.OrderAddress", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Country")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("NumberLine")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("PostalCode")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Region")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("State")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Street")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("OrderAddresses");
            });

        modelBuilder.Entity("V_Tailoring.Entities.OrderMeasurement", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("AnkleSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ArmLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ArmSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BackWaist")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BodyHeight")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("BurstGirth")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DefaultPriceId")
                    .HasColumnType("int");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("FrontWaist")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Head")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("HighHips")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("HipSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("LegLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("NeckSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("OrderId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ShoulderWidth")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("ThirdQuarterLegLength")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("WaistSize")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("WristCircumfrence")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.HasIndex("DefaultPriceId");

                b.ToTable("OrderMeasurements");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Pattern", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("ClothCategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClothGenderId")
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("PatternName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<decimal>("PatternPrice")
                    .HasColumnType("decimal(65,30)");

                b.Property<string>("PatternUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.HasIndex("ClothCategoryId");

                b.HasIndex("ClothGenderId");

                b.ToTable("Patterns");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Post", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsApproved")
                    .HasColumnType("tinyint(1)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("Likes")
                    .HasColumnType("int");

                b.Property<string>("PostDescription")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("PostImage")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("PostTitle")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("PublishDate")
                    .HasColumnType("datetime(6)");

                b.Property<int>("ReadTime")
                    .HasColumnType("int");

                b.Property<int>("StaffId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.HasIndex("StaffId");

                b.ToTable("Posts");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Staff", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("StaffNo")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("UserDetailsId")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserDetailsId");

                b.HasIndex("UserId")
                    .IsUnique();

                b.ToTable("Staffs");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Style", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("ClothCategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClothGenderId")
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool?>("IsApproved")
                    .HasColumnType("tinyint(1)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("StyleId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("StyleName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<decimal>("StylePrice")
                    .HasColumnType("decimal(65,30)");

                b.Property<string>("StyleUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.HasIndex("ClothCategoryId");

                b.HasIndex("ClothGenderId");

                b.ToTable("Styles");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Template", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("ArmTypeId")
                    .HasColumnType("int");

                b.Property<int>("ClothCategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClothGenderId")
                    .HasColumnType("int");

                b.Property<int>("CollectionId")
                    .HasColumnType("int");

                b.Property<int>("ColorId")
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("MaterialId")
                    .HasColumnType("int");

                b.Property<int>("PatternId")
                    .HasColumnType("int");

                b.Property<int>("StyleId")
                    .HasColumnType("int");

                b.Property<string>("TemplateId")
                    .HasColumnType("longtext");

                b.Property<string>("TemplateName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.HasIndex("ArmTypeId");

                b.HasIndex("ClothCategoryId");

                b.HasIndex("ClothGenderId");

                b.HasIndex("CollectionId")
                    .IsUnique();

                b.HasIndex("ColorId");

                b.HasIndex("MaterialId");

                b.HasIndex("PatternId");

                b.HasIndex("StyleId");

                b.ToTable("Templates");
            });

        modelBuilder.Entity("V_Tailoring.Entities.UserDetails", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("AddressId")
                    .HasColumnType("int");

                b.Property<int>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedOn")
                    .HasColumnType("datetime(6)");

                b.Property<int>("DeletedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("DeletedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<int>("Gender")
                    .HasColumnType("int");

                b.Property<string>("ImageUrl")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("tinyint(1)");

                b.Property<int>("LastModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("LastModifiedOn")
                    .HasColumnType("datetime(6)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.HasIndex("AddressId");

                b.ToTable("UserDetails");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Collection", b =>
            {
                b.HasOne("V_Tailoring.Entities.ClothCategory", "ClothCategory")
                    .WithMany()
                    .HasForeignKey("ClothCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothGender", "ClothGender")
                    .WithMany()
                    .HasForeignKey("ClothGenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ClothCategory");

                b.Navigation("ClothGender");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Comment", b =>
            {
                b.HasOne("V_Tailoring.Entities.Customer", "Customer")
                    .WithMany()
                    .HasForeignKey("CustomerId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Post", "Post")
                    .WithMany("Comments")
                    .HasForeignKey("PostId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Customer");

                b.Navigation("Post");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Customer", b =>
            {
                b.HasOne("V_Tailoring.Entities.Measurement", "Measurements")
                    .WithMany()
                    .HasForeignKey("MeasurementsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.UserDetails", "UserDetails")
                    .WithMany()
                    .HasForeignKey("UserDetailsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Identity.User", "User")
                    .WithOne("Customer")
                    .HasForeignKey("V_Tailoring.Entities.Customer", "UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Measurements");

                b.Navigation("User");

                b.Navigation("UserDetails");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.UserRole", b =>
            {
                b.HasOne("V_Tailoring.Entities.Identity.Role", "Role")
                    .WithMany("UserRoles")
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Identity.User", "User")
                    .WithMany("UserRoles")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");

                b.Navigation("User");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Order", b =>
            {
                b.HasOne("V_Tailoring.Entities.ArmType", "ArmType")
                    .WithMany()
                    .HasForeignKey("ArmTypeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothCategory", "ClothType")
                    .WithMany()
                    .HasForeignKey("ClothCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothGender", "ClothGender")
                    .WithMany()
                    .HasForeignKey("ClothGenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Color", "Color")
                    .WithMany()
                    .HasForeignKey("ColorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Customer", "Customer")
                    .WithMany()
                    .HasForeignKey("CustomerId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Material", "Material")
                    .WithMany()
                    .HasForeignKey("MaterialId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.OrderAddress", "OrderAddress")
                    .WithMany()
                    .HasForeignKey("OrderAddressId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.OrderMeasurement", "OrderMeasurements")
                    .WithMany()
                    .HasForeignKey("OrderMeasurementId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Pattern", "Pattern")
                    .WithMany()
                    .HasForeignKey("PatternId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Staff", "Staff")
                    .WithMany()
                    .HasForeignKey("StaffId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Style", "Style")
                    .WithMany()
                    .HasForeignKey("StyleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ArmType");

                b.Navigation("ClothGender");

                b.Navigation("ClothType");

                b.Navigation("Color");

                b.Navigation("Customer");

                b.Navigation("Material");

                b.Navigation("OrderAddress");

                b.Navigation("OrderMeasurements");

                b.Navigation("Pattern");

                b.Navigation("Staff");

                b.Navigation("Style");
            });

        modelBuilder.Entity("V_Tailoring.Entities.OrderMeasurement", b =>
            {
                b.HasOne("V_Tailoring.Entities.DefaultPrice", "DefaultPrice")
                    .WithMany()
                    .HasForeignKey("DefaultPriceId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("DefaultPrice");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Pattern", b =>
            {
                b.HasOne("V_Tailoring.Entities.ClothCategory", "ClothCategories")
                    .WithMany()
                    .HasForeignKey("ClothCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothGender", "ClothGender")
                    .WithMany()
                    .HasForeignKey("ClothGenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ClothCategories");

                b.Navigation("ClothGender");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Post", b =>
            {
                b.HasOne("V_Tailoring.Entities.Category", "Category")
                    .WithMany()
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Staff", "Staff")
                    .WithMany()
                    .HasForeignKey("StaffId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");

                b.Navigation("Staff");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Staff", b =>
            {
                b.HasOne("V_Tailoring.Entities.UserDetails", "UserDetails")
                    .WithMany()
                    .HasForeignKey("UserDetailsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Identity.User", "User")
                    .WithOne("Staff")
                    .HasForeignKey("V_Tailoring.Entities.Staff", "UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");

                b.Navigation("UserDetails");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Style", b =>
            {
                b.HasOne("V_Tailoring.Entities.ClothCategory", "ClothCategories")
                    .WithMany()
                    .HasForeignKey("ClothCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothGender", "ClothGender")
                    .WithMany()
                    .HasForeignKey("ClothGenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ClothCategories");

                b.Navigation("ClothGender");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Template", b =>
            {
                b.HasOne("V_Tailoring.Entities.ArmType", "ArmType")
                    .WithMany()
                    .HasForeignKey("ArmTypeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothCategory", "ClothCategory")
                    .WithMany()
                    .HasForeignKey("ClothCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.ClothGender", "ClothGender")
                    .WithMany()
                    .HasForeignKey("ClothGenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Collection", "Collection")
                    .WithOne("Template")
                    .HasForeignKey("V_Tailoring.Entities.Template", "CollectionId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Color", "Color")
                    .WithMany()
                    .HasForeignKey("ColorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Material", "Material")
                    .WithMany()
                    .HasForeignKey("MaterialId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Pattern", "Pattern")
                    .WithMany()
                    .HasForeignKey("PatternId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("V_Tailoring.Entities.Style", "Style")
                    .WithMany()
                    .HasForeignKey("StyleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ArmType");

                b.Navigation("ClothCategory");

                b.Navigation("ClothGender");

                b.Navigation("Collection");

                b.Navigation("Color");

                b.Navigation("Material");

                b.Navigation("Pattern");

                b.Navigation("Style");
            });

        modelBuilder.Entity("V_Tailoring.Entities.UserDetails", b =>
            {
                b.HasOne("V_Tailoring.Entities.Address", "Address")
                    .WithMany()
                    .HasForeignKey("AddressId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Address");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Collection", b =>
            {
                b.Navigation("Template")
                    .IsRequired();
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.Role", b =>
            {
                b.Navigation("UserRoles");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Identity.User", b =>
            {
                b.Navigation("Customer")
                    .IsRequired();

                b.Navigation("Staff")
                    .IsRequired();

                b.Navigation("UserRoles");
            });

        modelBuilder.Entity("V_Tailoring.Entities.Post", b =>
            {
                b.Navigation("Comments");
            });
#pragma warning restore 612, 618
    }
}
